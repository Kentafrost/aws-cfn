AWSTemplateFormatVersion: "2010-09-09"
Description: "Create a Lambda function with access to an S3 bucket"

Parameters:
  VpcId:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /VPC
  PrivSubnetId1:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /PrivateSubnet1
  PrivSubnetId2:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /PrivateSubnet2
  SecurityGroupId:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /LambdaSecurityGroup
  LambdaS3BucketName:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /LambdaS3BucketName
  CodeS3Bucket:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /CodeS3BucketName
  LambdaExecutionRoleArn:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /LambdaExecutionRole

Resources:
  MyLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: "MyS3AccessLambda"
      Runtime: python3.12
      Role: !Ref LambdaExecutionRoleArn
      Handler: main.handler
      Code:
        S3Bucket: !Ref CodeS3Bucket
        S3Key: "test/s3_access_lambda.zip" 
      Timeout: 30
      MemorySize: 128
      # VpcConfig:
      #   SubnetIds:
      #     - !Ref PrivSubnetId1
      #     - !Ref PrivSubnetId2
      #   SecurityGroupIds:
      #     - !Ref SecurityGroupId
      Environment:
        Variables:
          S3_BUCKET: !Ref LambdaS3BucketName

